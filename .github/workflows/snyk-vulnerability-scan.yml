name: Snyk Security Scan with SARIF Upload and Issue Creation

on:
  push:
    branches:
      - main

permissions:
  actions: write
  issues: write  # Grant permission to create issues
  security-events: write

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true
        env: 
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: "--sarif-file-output=path/snyk.sarif"

      - name: Check if SARIF file exists and print contents
        run: |
          ls -la  # List files to check if snyk.sarif exists
          cat path/snyk.sarif  # Display the contents of the SARIF file

      - name: Upload SARIF report to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: path/snyk.sarif
          token: ${{ secrets.GH_PAT }}
          wait-for-processing: true

      - name: Create GitHub Issues from SARIF
        if: success() && steps.upload-sarif.outputs.upload-success == 'true'
        run: |
          # Extract issues from SARIF file
          issues=$(cat path/snyk.sarif | jq -r '.runs[0].results[] | "\(.ruleId) - \(.message.text) - URI: \(.locations[0].physicalLocation.artifactLocation.uri) Line: \(.locations[0].physicalLocation.region.startLine)"')

          # If no issues found, exit early
          if [ -z "$issues" ]; then
            echo "No issues found in SARIF report"
            exit 0
          fi

          # Iterate through the issues and create GitHub issues
          for issue in $issues; do
            # Extract ruleId (alert title) and other details
            ruleId=$(echo "$issue" | cut -d'-' -f1)
            message=$(echo "$issue" | cut -d'-' -f2)
            details=$(echo "$issue" | cut -d'-' -f3-)

            # Create the GitHub issue with the extracted details
            curl -X POST \
              -H "Authorization: token ${{ secrets.GH_PAT }}" \
              -d "{\"title\": \"Fix code scanning alert - $ruleId\", \"body\": \"Description: $message\n\nTracking issue for: [Link to issue](https://github.com/${{ github.repository }}/security/code-scanning/2)\", \"labels\": [\"security\", \"vulnerability\"]}" \
              "https://api.github.com/repos/${{ github.repository }}/issues" \
              -w "\nResponse code: %{http_code}\n"
          done
